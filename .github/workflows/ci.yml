name: CI

on:
  pull_request:
    branches: [main]

env:
  PYTHON_VERSION: '3.11'

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # Database Configuration - using aiosqlite for async SQLite
      DATABASE_URL: sqlite+aiosqlite:///./test.db
      # Security Configuration
      SECRET: test-secret-key-for-ci-only
      # JWT Configuration
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 60
      ONLINE_TIMEOUT_MINUTES: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: |
          playwright install --with-deps

      - name: Create test database
        run: |
          alembic upgrade head

      - name: Run linting
        run: |
          black --check .
          isort --check-only .

      - name: Run title case check
        run: |
          python scripts/title_case_check.py

      - name: Run tests
        run: |
          pytest -v --tb=short

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            .pytest_cache/
            test-results.xml
          retention-days: 7
