versions pytest-8.3.5, python-3.11.11.final.0
invocation_dir=/Users/willmoritz/Code/aimagain
cwd=/Users/willmoritz/Code/aimagain
args=('-k', 'test_consumer_message_page_loads', '--debug', '-vvv')

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x101e71e50>
    pytest_plugin_registered [hook]
        plugin: <Session  exitstatus='<UNSET>' testsfailed=0 testscollected=0>
        plugin_name: session
        manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x101e71e50>
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x106533d10>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x106cafd90>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: faulthandler [assertion]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
    early skip of rewriting module: pdb [assertion]
    early skip of rewriting module: cmd [assertion]
    early skip of rewriting module: code [assertion]
    early skip of rewriting module: codeop [assertion]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
          plugin_name: 4323964368
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x101e71e50>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/anyio/pytest_plugin.py'>
          plugin_name: anyio
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_playwright_asyncio.pytest_playwright' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest_playwright_asyncio/pytest_playwright.py'>
          plugin_name: playwright-asyncio
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest_asyncio/plugin.py'>
          plugin_name: asyncio
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_base_url.plugin' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest_base_url/plugin.py'>
          plugin_name: base_url
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'tests.test_contract.conftest' from '/Users/willmoritz/Code/aimagain/tests/test_contract/conftest.py'>
          plugin_name: /Users/willmoritz/Code/aimagain/tests/test_contract/conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/Users/willmoritz/Code/aimagain/tests/test_api/conftest.py'>
          plugin_name: /Users/willmoritz/Code/aimagain/tests/test_api/conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x106533d10>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x106cafd90>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x106cb8390>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x106cacf10>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
          plugin_name: 4323964368
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.config.Config object at 0x101e71e50>
          plugin_name: pytestconfig
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.mark' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/mark/__init__.py'>
          plugin_name: mark
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.main' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/main.py'>
          plugin_name: main
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.runner' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/runner.py'>
          plugin_name: runner
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.fixtures' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/fixtures.py'>
          plugin_name: fixtures
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.helpconfig' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/helpconfig.py'>
          plugin_name: helpconfig
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/python.py'>
          plugin_name: python
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.terminal' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/terminal.py'>
          plugin_name: terminal
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.debugging' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/debugging.py'>
          plugin_name: debugging
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unittest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/unittest.py'>
          plugin_name: unittest
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.capture' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/capture.py'>
          plugin_name: capture
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.skipping' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/skipping.py'>
          plugin_name: skipping
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.legacypath' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/legacypath.py'>
          plugin_name: legacypath
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.tmpdir' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/tmpdir.py'>
          plugin_name: tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.monkeypatch' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/monkeypatch.py'>
          plugin_name: monkeypatch
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.recwarn' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/recwarn.py'>
          plugin_name: recwarn
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.pastebin' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/pastebin.py'>
          plugin_name: pastebin
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.assertion' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/__init__.py'>
          plugin_name: assertion
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.junitxml' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/junitxml.py'>
          plugin_name: junitxml
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.doctest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/doctest.py'>
          plugin_name: doctest
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.cacheprovider' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/cacheprovider.py'>
          plugin_name: cacheprovider
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.freeze_support' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/freeze_support.py'>
          plugin_name: freeze_support
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setuponly' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/setuponly.py'>
          plugin_name: setuponly
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.setupplan' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/setupplan.py'>
          plugin_name: setupplan
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.stepwise' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/stepwise.py'>
          plugin_name: stepwise
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.warnings' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/warnings.py'>
          plugin_name: warnings
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.logging' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/logging.py'>
          plugin_name: logging
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.reports' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/reports.py'>
          plugin_name: reports
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.python_path' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/python_path.py'>
          plugin_name: python_path
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.unraisableexception' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/unraisableexception.py'>
          plugin_name: unraisableexception
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.threadexception' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/threadexception.py'>
          plugin_name: threadexception
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module '_pytest.faulthandler' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/faulthandler.py'>
          plugin_name: faulthandler
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'anyio.pytest_plugin' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/anyio/pytest_plugin.py'>
          plugin_name: anyio
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_playwright_asyncio.pytest_playwright' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest_playwright_asyncio/pytest_playwright.py'>
          plugin_name: playwright-asyncio
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_asyncio.plugin' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest_asyncio/plugin.py'>
          plugin_name: asyncio
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'pytest_base_url.plugin' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest_base_url/plugin.py'>
          plugin_name: base_url
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <CaptureManager _method='fd' _global_capturing=<MultiCapture out=<FDCapture 1 oldfd=5 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=6 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> err=<FDCapture 2 oldfd=7 _state='suspended' tmpfile=<_io.TextIOWrapper name="<_io.FileIO name=8 mode='rb+' closefd=True>" mode='r+' encoding='utf-8'>> in_=<FDCapture 0 oldfd=3 _state='started' tmpfile=<_io.TextIOWrapper name='/dev/null' mode='r' encoding='utf-8'>> _state='suspended' _in_suspended=False> _capture_fixture=None>
          plugin_name: capturemanager
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'tests.test_contract.conftest' from '/Users/willmoritz/Code/aimagain/tests/test_contract/conftest.py'>
          plugin_name: /Users/willmoritz/Code/aimagain/tests/test_contract/conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <module 'conftest' from '/Users/willmoritz/Code/aimagain/tests/test_api/conftest.py'>
          plugin_name: /Users/willmoritz/Code/aimagain/tests/test_api/conftest.py
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          plugin_name: session
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.LFPlugin object at 0x106533d10>
          plugin_name: lfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.cacheprovider.NFPlugin object at 0x106cafd90>
          plugin_name: nfplugin
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <class '_pytest.legacypath.LegacyTmpdirPlugin'>
          plugin_name: legacypath-tmpdir
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.terminal.TerminalReporter object at 0x106cb8390>
          plugin_name: terminalreporter
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.logging.LoggingPlugin object at 0x106cacf10>
          plugin_name: logging-plugin
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          plugin: <_pytest.fixtures.FixtureManager object at 0x106cdd7d0>
          plugin_name: funcmanage
          manager: <_pytest.config.PytestPluginManager object at 0x101ba75d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          config: <_pytest.config.Config object at 0x101e71e50>
          start_path: /Users/willmoritz/Code/aimagain
          startdir: /Users/willmoritz/Code/aimagain
      finish pytest_report_header --> [['asyncio: mode=Mode.AUTO, asyncio_default_fixture_loop_scope=session, asyncio_default_test_loop_scope=function'], ['rootdir: /Users/willmoritz/Code/aimagain', 'configfile: pytest.ini', 'testpaths: tests', 'plugins: anyio-4.9.0, playwright-asyncio-0.7.0, asyncio-0.26.0, base-url-2.1.0'], 'cachedir: .pytest_cache', ['using: pytest-8.3.5', 'registered third-party plugins:', '  anyio-4.9.0 at /Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/anyio/pytest_plugin.py', '  pytest-playwright-asyncio-0.7.0 at /Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest_playwright_asyncio/pytest_playwright.py', '  pytest-asyncio-0.26.0 at /Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest_asyncio/plugin.py', '  pytest-base-url-2.1.0 at /Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest_base_url/plugin.py']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
    perform_collect <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0> ['tests'] [collection]
        pytest_collectstart [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        processing argument CollectionArgument(path=PosixPath('/Users/willmoritz/Code/aimagain/tests'), parts=[], module_name=None) [collection]
            pytest_collect_directory [hook]
                path: /Users/willmoritz/Code/aimagain
                parent: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
            finish pytest_collect_directory --> <Dir aimagain> [hook]
            pytest_collectstart [hook]
                collector: <Dir aimagain>
            finish pytest_collectstart --> [] [hook]
            pytest_make_collect_report [hook]
                collector: <Dir aimagain>
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/.cursor
                  path: /Users/willmoritz/Code/aimagain/.cursor
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/.env
                  path: /Users/willmoritz/Code/aimagain/.env
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir aimagain>
                  file_path: /Users/willmoritz/Code/aimagain/.env
                  path: /Users/willmoritz/Code/aimagain/.env
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/.env.example
                  path: /Users/willmoritz/Code/aimagain/.env.example
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir aimagain>
                  file_path: /Users/willmoritz/Code/aimagain/.env.example
                  path: /Users/willmoritz/Code/aimagain/.env.example
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/.git
                  path: /Users/willmoritz/Code/aimagain/.git
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/.gitignore
                  path: /Users/willmoritz/Code/aimagain/.gitignore
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir aimagain>
                  file_path: /Users/willmoritz/Code/aimagain/.gitignore
                  path: /Users/willmoritz/Code/aimagain/.gitignore
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/.pre-commit-config.yaml
                  path: /Users/willmoritz/Code/aimagain/.pre-commit-config.yaml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir aimagain>
                  file_path: /Users/willmoritz/Code/aimagain/.pre-commit-config.yaml
                  path: /Users/willmoritz/Code/aimagain/.pre-commit-config.yaml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/.pytest_cache
                  path: /Users/willmoritz/Code/aimagain/.pytest_cache
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/.vscode
                  path: /Users/willmoritz/Code/aimagain/.vscode
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/README.md
                  path: /Users/willmoritz/Code/aimagain/README.md
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir aimagain>
                  file_path: /Users/willmoritz/Code/aimagain/README.md
                  path: /Users/willmoritz/Code/aimagain/README.md
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/alembic
                  path: /Users/willmoritz/Code/aimagain/alembic
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /Users/willmoritz/Code/aimagain/alembic
                  parent: <Dir aimagain>
              finish pytest_collect_directory --> <Dir alembic> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/alembic.ini
                  path: /Users/willmoritz/Code/aimagain/alembic.ini
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir aimagain>
                  file_path: /Users/willmoritz/Code/aimagain/alembic.ini
                  path: /Users/willmoritz/Code/aimagain/alembic.ini
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/app
                  path: /Users/willmoritz/Code/aimagain/app
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /Users/willmoritz/Code/aimagain/app
                  parent: <Dir aimagain>
              finish pytest_collect_directory --> <Package app> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/build
                  path: /Users/willmoritz/Code/aimagain/build
              finish pytest_ignore_collect --> True [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/chat_app.db
                  path: /Users/willmoritz/Code/aimagain/chat_app.db
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir aimagain>
                  file_path: /Users/willmoritz/Code/aimagain/chat_app.db
                  path: /Users/willmoritz/Code/aimagain/chat_app.db
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/chat_app.egg-info
                  path: /Users/willmoritz/Code/aimagain/chat_app.egg-info
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /Users/willmoritz/Code/aimagain/chat_app.egg-info
                  parent: <Dir aimagain>
              finish pytest_collect_directory --> <Dir chat_app.egg-info> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/notes
                  path: /Users/willmoritz/Code/aimagain/notes
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /Users/willmoritz/Code/aimagain/notes
                  parent: <Dir aimagain>
              finish pytest_collect_directory --> <Dir notes> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/pyproject.toml
                  path: /Users/willmoritz/Code/aimagain/pyproject.toml
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir aimagain>
                  file_path: /Users/willmoritz/Code/aimagain/pyproject.toml
                  path: /Users/willmoritz/Code/aimagain/pyproject.toml
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/pytest.ini
                  path: /Users/willmoritz/Code/aimagain/pytest.ini
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir aimagain>
                  file_path: /Users/willmoritz/Code/aimagain/pytest.ini
                  path: /Users/willmoritz/Code/aimagain/pytest.ini
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/pytestdebug.log
                  path: /Users/willmoritz/Code/aimagain/pytestdebug.log
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_file [hook]
                  parent: <Dir aimagain>
                  file_path: /Users/willmoritz/Code/aimagain/pytestdebug.log
                  path: /Users/willmoritz/Code/aimagain/pytestdebug.log
              finish pytest_collect_file --> [] [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/scripts
                  path: /Users/willmoritz/Code/aimagain/scripts
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /Users/willmoritz/Code/aimagain/scripts
                  parent: <Dir aimagain>
              finish pytest_collect_directory --> <Dir scripts> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/templates
                  path: /Users/willmoritz/Code/aimagain/templates
              finish pytest_ignore_collect --> None [hook]
              pytest_collect_directory [hook]
                  path: /Users/willmoritz/Code/aimagain/templates
                  parent: <Dir aimagain>
              finish pytest_collect_directory --> <Dir templates> [hook]
              pytest_collect_directory [hook]
                  path: /Users/willmoritz/Code/aimagain/tests
                  parent: <Dir aimagain>
              finish pytest_collect_directory --> <Package tests> [hook]
              pytest_ignore_collect [hook]
                  config: <_pytest.config.Config object at 0x101e71e50>
                  collection_path: /Users/willmoritz/Code/aimagain/venv
                  path: /Users/willmoritz/Code/aimagain/venv
              finish pytest_ignore_collect --> True [hook]
            finish pytest_make_collect_report --> <CollectReport '.' lenresult=7 outcome='passed'> [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Package tests> [collection]
      pytest_collectstart [hook]
          collector: <Package tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package tests>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /Users/willmoritz/Code/aimagain/tests/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/__pycache__
            path: /Users/willmoritz/Code/aimagain/tests/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/shared_test_data.py
            path: /Users/willmoritz/Code/aimagain/tests/shared_test_data.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package tests>
            file_path: /Users/willmoritz/Code/aimagain/tests/shared_test_data.py
            path: /Users/willmoritz/Code/aimagain/tests/shared_test_data.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api
            path: /Users/willmoritz/Code/aimagain/tests/test_api
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_api
            parent: <Package tests>
        finish pytest_collect_directory --> <Dir test_api> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract
            path: /Users/willmoritz/Code/aimagain/tests/test_contract
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract
            parent: <Package tests>
        finish pytest_collect_directory --> <Package test_contract> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests' lenresult=2 outcome='passed'> [hook]
    genitems <Dir test_api> [collection]
      pytest_collectstart [hook]
          collector: <Dir test_api>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir test_api>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/__pycache__
            path: /Users/willmoritz/Code/aimagain/tests/test_api/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/conftest.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/conftest.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/conftest.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/conftest.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_auth.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_auth.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_auth.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_auth.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_auth.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_auth.py
          finish pytest_pycollect_makemodule --> <Module test_auth.py> [hook]
        finish pytest_collect_file --> [<Module test_auth.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_conversation_routes.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_conversation_routes.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_conversation_routes.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_conversation_routes.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_conversation_routes.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_conversation_routes.py
          finish pytest_pycollect_makemodule --> <Module test_conversation_routes.py> [hook]
        finish pytest_collect_file --> [<Module test_conversation_routes.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_conversation.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_conversation.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_conversation.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_conversation.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_conversation.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_conversation.py
          finish pytest_pycollect_makemodule --> <Module test_create_conversation.py> [hook]
        finish pytest_collect_file --> [<Module test_create_conversation.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_message.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_message.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_message.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_message.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_message.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_create_message.py
          finish pytest_pycollect_makemodule --> <Module test_create_message.py> [hook]
        finish pytest_collect_file --> [<Module test_create_message.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_get_conversation.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_get_conversation.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_get_conversation.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_get_conversation.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_get_conversation.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_get_conversation.py
          finish pytest_pycollect_makemodule --> <Module test_get_conversation.py> [hook]
        finish pytest_collect_file --> [<Module test_get_conversation.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_helpers.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_helpers.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_helpers.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_helpers.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_helpers.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_helpers.py
          finish pytest_pycollect_makemodule --> <Module test_helpers.py> [hook]
        finish pytest_collect_file --> [<Module test_helpers.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_invite_participant.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_invite_participant.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_invite_participant.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_invite_participant.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_invite_participant.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_invite_participant.py
          finish pytest_pycollect_makemodule --> <Module test_invite_participant.py> [hook]
        finish pytest_collect_file --> [<Module test_invite_participant.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_list_conversations.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_list_conversations.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_list_conversations.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_list_conversations.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_list_conversations.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_list_conversations.py
          finish pytest_pycollect_makemodule --> <Module test_list_conversations.py> [hook]
        finish pytest_collect_file --> [<Module test_list_conversations.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_me.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_me.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_me.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_me.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_me.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_me.py
          finish pytest_pycollect_makemodule --> <Module test_me.py> [hook]
        finish pytest_collect_file --> [<Module test_me.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_participants.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_participants.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_participants.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_participants.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_participants.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_participants.py
          finish pytest_pycollect_makemodule --> <Module test_participants.py> [hook]
        finish pytest_collect_file --> [<Module test_participants.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_presence_middleware.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_presence_middleware.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_presence_middleware.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_presence_middleware.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_presence_middleware.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_presence_middleware.py
          finish pytest_pycollect_makemodule --> <Module test_presence_middleware.py> [hook]
        finish pytest_collect_file --> [<Module test_presence_middleware.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_user_presence.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_user_presence.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_user_presence.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_user_presence.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_user_presence.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_user_presence.py
          finish pytest_pycollect_makemodule --> <Module test_user_presence.py> [hook]
        finish pytest_collect_file --> [<Module test_user_presence.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_users.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_users.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir test_api>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_users.py
            path: /Users/willmoritz/Code/aimagain/tests/test_api/test_users.py
          pytest_pycollect_makemodule [hook]
              parent: <Dir test_api>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_api/test_users.py
              path: /Users/willmoritz/Code/aimagain/tests/test_api/test_users.py
          finish pytest_pycollect_makemodule --> <Module test_users.py> [hook]
        finish pytest_collect_file --> [<Module test_users.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api' lenresult=13 outcome='passed'> [hook]
    genitems <Module test_auth.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_auth.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_auth.py>
      find_module called for: test_auth [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_auth.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_auth.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: SQLAlchemyUserDatabase
            obj: <class 'fastapi_users_db_sqlalchemy.SQLAlchemyUserDatabase'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: BaseModel
            obj: <class 'pydantic.main.BaseModel'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: pytestmark
            obj: MarkDecorator(mark=Mark(name='asyncio', args=(), kwargs={}))
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: UserCreateRequest
            obj: <class 'test_auth.UserCreateRequest'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_register
            obj: <function test_register at 0x106cf8cc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d02f50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_register>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_register_duplicate_email
            obj: <function test_register_duplicate_email at 0x106cf8d60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x105a11ed0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_register_duplicate_email>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_login_success
            obj: <function test_login_success at 0x106cf8e00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x105a11ed0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_login_success>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_login_failure_wrong_password
            obj: <function test_login_failure_wrong_password at 0x106cf8ea0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d0c990>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_login_failure_wrong_password>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_login_failure_nonexistent_user
            obj: <function test_login_failure_nonexistent_user at 0x106cf8f40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d0d050>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_login_failure_nonexistent_user>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_logout_success
            obj: <function test_logout_success at 0x106cf8fe0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d0d8d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_logout_success>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_forgot_password_request
            obj: <function test_forgot_password_request at 0x106cf9080>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d0e150>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_forgot_password_request>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_forgot_password_request_nonexistent_user
            obj: <function test_forgot_password_request_nonexistent_user at 0x106cf9120>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d0ea10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_forgot_password_request_nonexistent_user>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_reset_password
            obj: <function test_reset_password at 0x106cf91c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d0f290>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_reset_password>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_reset_password_invalid_token
            obj: <function test_reset_password_invalid_token at 0x106cf9260>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d0f290>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_reset_password_invalid_token>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_get_register_page
            obj: <function test_get_register_page at 0x106cf9300>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d2c410>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_register_page>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_get_login_page
            obj: <function test_get_login_page at 0x106cf93a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d2cc90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_login_page>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_get_forgot_password_page
            obj: <function test_get_forgot_password_page at 0x106cf9440>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d2d510>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_forgot_password_page>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: test_get_reset_password_page
            obj: <function test_get_reset_password_page at 0x106cf94e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d2dd90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_reset_password_page>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106cf84a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106ce3e20>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_auth.py' lenresult=14 outcome='passed'> [hook]
    genitems <Coroutine test_register> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_register>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_register_duplicate_email> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_register_duplicate_email>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_login_success> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_login_success>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_login_failure_wrong_password> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_login_failure_wrong_password>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_login_failure_nonexistent_user> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_login_failure_nonexistent_user>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_logout_success> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_logout_success>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_forgot_password_request> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_forgot_password_request>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_forgot_password_request_nonexistent_user> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_forgot_password_request_nonexistent_user>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_reset_password> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_reset_password>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_reset_password_invalid_token> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_reset_password_invalid_token>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_register_page> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_register_page>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_login_page> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_login_page>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_forgot_password_page> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_forgot_password_page>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_reset_password_page> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_reset_password_page>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_auth.py' lenresult=14 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_conversation_routes.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_conversation_routes.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_conversation_routes.py>
      find_module called for: test_conversation_routes [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_conversation_routes.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_conversation_routes.py [assertion]
      early skip of rewriting module: selectolax [assertion]
      early skip of rewriting module: selectolax.parser [assertion]
      early skip of rewriting module: backports_abc [assertion]
      early skip of rewriting module: selectolax.lexbor [assertion]
      early skip of rewriting module: backports_abc [assertion]
      early skip of rewriting module: selectolax.modest [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_routes.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_routes.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_routes.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_routes.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_routes.py>
            name: HTMLParser
            obj: <class 'selectolax.parser.HTMLParser'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_routes.py>
            name: pytestmark
            obj: MarkDecorator(mark=Mark(name='asyncio', args=(), kwargs={}))
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_routes.py>
            name: test_get_new_conversation_form_success
            obj: <function test_get_new_conversation_form_success at 0x101f04b80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d2eed0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_new_conversation_form_success>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_routes.py>
            name: test_get_new_conversation_form_unauthenticated
            obj: <function test_get_new_conversation_form_unauthenticated at 0x106cf9da0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d32590>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_new_conversation_form_unauthenticated>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_routes.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106cf8360>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_conversation_routes.py' lenresult=2 outcome='passed'> [hook]
    genitems <Coroutine test_get_new_conversation_form_success> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_new_conversation_form_success>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_new_conversation_form_unauthenticated> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_new_conversation_form_unauthenticated>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_conversation_routes.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_create_conversation.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_create_conversation.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_create_conversation.py>
      find_module called for: test_create_conversation [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_create_conversation.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_create_conversation.py [assertion]
      find_module called for: test_helpers [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_helpers.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_helpers.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: uuid
            obj: <module 'uuid' from '/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: Optional
            obj: typing.Optional
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: UUID
            obj: <class 'uuid.UUID'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: BaseModel
            obj: <class 'pydantic.main.BaseModel'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: func
            obj: <sqlalchemy.sql.functions._FunctionGenerator object at 0x105054750>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: select
            obj: <function select at 0x1050872e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: Conversation
            obj: <class 'app.models.conversation.Conversation'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: Message
            obj: <class 'app.models.message.Message'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: Participant
            obj: <class 'app.models.participant.Participant'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: ParticipantStatus
            obj: <enum 'ParticipantStatus'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: ConversationCreateRequest
            obj: <class 'test_create_conversation.ConversationCreateRequest'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: ConversationResponse
            obj: <class 'test_create_conversation.ConversationResponse'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: pytestmark
            obj: MarkDecorator(mark=Mark(name='asyncio', args=(), kwargs={}))
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: test_create_conversation_invitee_not_found
            obj: <function test_create_conversation_invitee_not_found at 0x106cf9bc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d32e50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_conversation_invitee_not_found>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: test_create_conversation_invitee_offline
            obj: <function test_create_conversation_invitee_offline at 0x106cfa2a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d456d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_conversation_invitee_offline>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: test_create_conversation_success_with_username
            obj: <function test_create_conversation_success_with_username at 0x106cf9e40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d456d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_conversation_success_with_username>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: test_create_conversation_form_invalid_username
            obj: <function test_create_conversation_form_invalid_username at 0x106cfa340>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d47210>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_conversation_form_invalid_username>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: test_create_conversation_form_missing_data
            obj: <function test_create_conversation_form_missing_data at 0x106cfa840>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d47a10>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x101e71e50>
                val: invitee_username
                argname: missing_field
            finish pytest_make_parametrize_id --> None [hook]
          early skip of rewriting module: encodings.unicode_escape [assertion]
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x101e71e50>
                val: initial_message
                argname: missing_field
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_conversation_form_missing_data[invitee_username]>, <Coroutine test_create_conversation_form_missing_data[initial_message]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: test_create_conversation_form_unauthenticated
            obj: <function test_create_conversation_form_unauthenticated at 0x106cfa980>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d47e90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_conversation_form_unauthenticated>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_conversation.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106cfa700>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_create_conversation.py' lenresult=7 outcome='passed'> [hook]
    genitems <Coroutine test_create_conversation_invitee_not_found> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_conversation_invitee_not_found>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_conversation_invitee_offline> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_conversation_invitee_offline>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_conversation_success_with_username> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_conversation_success_with_username>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_conversation_form_invalid_username> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_conversation_form_invalid_username>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_conversation_form_missing_data[invitee_username]> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_conversation_form_missing_data[invitee_username]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_conversation_form_missing_data[initial_message]> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_conversation_form_missing_data[initial_message]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_conversation_form_unauthenticated> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_conversation_form_unauthenticated>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_create_conversation.py' lenresult=7 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_create_message.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_create_message.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_create_message.py>
      find_module called for: test_create_message [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_create_message.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_create_message.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: uuid
            obj: <module 'uuid' from '/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: datetime
            obj: <class 'datetime.datetime'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: timezone
            obj: <class 'datetime.timezone'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: select
            obj: <function select at 0x1050872e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: Conversation
            obj: <class 'app.models.conversation.Conversation'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: Message
            obj: <class 'app.models.message.Message'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: Participant
            obj: <class 'app.models.participant.Participant'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: ParticipantStatus
            obj: <enum 'ParticipantStatus'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: pytestmark
            obj: MarkDecorator(mark=Mark(name='asyncio', args=(), kwargs={}))
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: test_create_message_success
            obj: <function test_create_message_success at 0x106cfbb00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d517d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_message_success>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: test_create_message_conversation_not_found
            obj: <function test_create_message_conversation_not_found at 0x106cfbba0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d47ad0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_message_conversation_not_found>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: test_create_message_user_not_participant
            obj: <function test_create_message_user_not_participant at 0x106cfbc40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d45b50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_message_user_not_participant>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: test_create_message_user_invited_not_joined
            obj: <function test_create_message_user_invited_not_joined at 0x106cfbce0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d52c50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_message_user_invited_not_joined>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: test_create_message_empty_content
            obj: <function test_create_message_empty_content at 0x106cfbd80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d52c50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_message_empty_content>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: test_message_sending_integration
            obj: <function test_message_sending_integration at 0x106cfbe20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d52c50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_message_sending_integration>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_create_message.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106cfb6a0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_create_message.py' lenresult=6 outcome='passed'> [hook]
    genitems <Coroutine test_create_message_success> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_message_success>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_message_conversation_not_found> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_message_conversation_not_found>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_message_user_not_participant> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_message_user_not_participant>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_message_user_invited_not_joined> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_message_user_invited_not_joined>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_message_empty_content> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_message_empty_content>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_message_sending_integration> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_message_sending_integration>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_create_message.py' lenresult=6 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_get_conversation.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_get_conversation.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_get_conversation.py>
      find_module called for: test_get_conversation [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_get_conversation.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_get_conversation.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: uuid
            obj: <module 'uuid' from '/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: datetime
            obj: <class 'datetime.datetime'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: timedelta
            obj: <class 'datetime.timedelta'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: timezone
            obj: <class 'datetime.timezone'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: HTMLParser
            obj: <class 'selectolax.parser.HTMLParser'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: Conversation
            obj: <class 'app.models.conversation.Conversation'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: Message
            obj: <class 'app.models.message.Message'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: Participant
            obj: <class 'app.models.participant.Participant'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: ParticipantStatus
            obj: <enum 'ParticipantStatus'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: pytestmark
            obj: MarkDecorator(mark=Mark(name='asyncio', args=(), kwargs={}))
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: test_get_conversation_not_found
            obj: <function test_get_conversation_not_found at 0x106d60540>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d64750>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_conversation_not_found>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: test_get_conversation_forbidden_not_participant
            obj: <function test_get_conversation_forbidden_not_participant at 0x106d605e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d64ed0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_conversation_forbidden_not_participant>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: test_get_conversation_forbidden_invited
            obj: <function test_get_conversation_forbidden_invited at 0x106d60680>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d64ed0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_conversation_forbidden_invited>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: test_get_conversation_success_joined
            obj: <function test_get_conversation_success_joined at 0x106d60720>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d66090>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_conversation_success_joined>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: test_get_conversation_has_message_form
            obj: <function test_get_conversation_has_message_form at 0x106d607c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d66090>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_conversation_has_message_form>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_get_conversation.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106cfbec0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_get_conversation.py' lenresult=5 outcome='passed'> [hook]
    genitems <Coroutine test_get_conversation_not_found> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_conversation_not_found>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_conversation_forbidden_not_participant> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_conversation_forbidden_not_participant>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_conversation_forbidden_invited> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_conversation_forbidden_invited>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_conversation_success_joined> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_conversation_success_joined>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_conversation_has_message_form> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_conversation_has_message_form>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_get_conversation.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_helpers.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_helpers.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_helpers.py>
        pytest_pycollect_makeitem [hook]
            collector: <Module test_helpers.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_helpers.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_helpers.py>
            name: uuid
            obj: <module 'uuid' from '/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_helpers.py>
            name: Optional
            obj: typing.Optional
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_helpers.py>
            name: UUID
            obj: <class 'uuid.UUID'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_helpers.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_helpers.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_helpers.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106cf9940>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_helpers.py' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_helpers.py' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_invite_participant.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_invite_participant.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_invite_participant.py>
      find_module called for: test_invite_participant [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_invite_participant.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_invite_participant.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: uuid
            obj: <module 'uuid' from '/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: Optional
            obj: typing.Optional
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: UUID
            obj: <class 'uuid.UUID'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: Conversation
            obj: <class 'app.models.conversation.Conversation'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: Participant
            obj: <class 'app.models.participant.Participant'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: ParticipantResponse
            obj: <class 'app.schemas.participant.ParticipantResponse'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: ParticipantStatus
            obj: <enum 'ParticipantStatus'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: pytestmark
            obj: MarkDecorator(mark=Mark(name='asyncio', args=(), kwargs={}))
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: test_invite_participant_success
            obj: <function test_invite_participant_success at 0x106cfb100>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d67f10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_invite_participant_success>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: test_invite_participant_forbidden_not_joined
            obj: <function test_invite_participant_forbidden_not_joined at 0x106cf8c20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d67d90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_invite_participant_forbidden_not_joined>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: test_invite_participant_conflict_already_participant
            obj: <function test_invite_participant_conflict_already_participant at 0x106cfb420>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d64710>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_invite_participant_conflict_already_participant>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: test_invite_participant_bad_request_offline
            obj: <function test_invite_participant_bad_request_offline at 0x106cfb4c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d65e90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_invite_participant_bad_request_offline>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invite_participant.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106cfa020>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_invite_participant.py' lenresult=4 outcome='passed'> [hook]
    genitems <Coroutine test_invite_participant_success> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_invite_participant_success>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_invite_participant_forbidden_not_joined> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_invite_participant_forbidden_not_joined>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_invite_participant_conflict_already_participant> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_invite_participant_conflict_already_participant>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_invite_participant_bad_request_offline> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_invite_participant_bad_request_offline>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_invite_participant.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_list_conversations.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_list_conversations.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_list_conversations.py>
      find_module called for: test_list_conversations [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_list_conversations.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_list_conversations.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: uuid
            obj: <module 'uuid' from '/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: datetime
            obj: <class 'datetime.datetime'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: timedelta
            obj: <class 'datetime.timedelta'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: timezone
            obj: <class 'datetime.timezone'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: HTMLParser
            obj: <class 'selectolax.parser.HTMLParser'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: Conversation
            obj: <class 'app.models.conversation.Conversation'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: Participant
            obj: <class 'app.models.participant.Participant'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: ParticipantStatus
            obj: <enum 'ParticipantStatus'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: pytestmark
            obj: MarkDecorator(mark=Mark(name='asyncio', args=(), kwargs={}))
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: test_list_conversations_empty
            obj: <function test_list_conversations_empty at 0x106d60e00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d7cfd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_conversations_empty>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: test_list_conversations_one_convo
            obj: <function test_list_conversations_one_convo at 0x106d60ea0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d7d410>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_conversations_one_convo>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: test_list_conversations_sorted
            obj: <function test_list_conversations_sorted at 0x106d60f40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d7d850>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_conversations_sorted>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: test_create_conversation_link_present
            obj: <function test_create_conversation_link_present at 0x106d60fe0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d7e010>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_create_conversation_link_present>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_list_conversations.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106d60360>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_list_conversations.py' lenresult=4 outcome='passed'> [hook]
    genitems <Coroutine test_list_conversations_empty> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_conversations_empty>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_conversations_one_convo> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_conversations_one_convo>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_conversations_sorted> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_conversations_sorted>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_create_conversation_link_present> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_create_conversation_link_present>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_list_conversations.py' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_me.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_me.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_me.py>
      find_module called for: test_me [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_me.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_me.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: uuid
            obj: <module 'uuid' from '/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: Optional
            obj: typing.Optional
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: UUID
            obj: <class 'uuid.UUID'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: HTMLParser
            obj: <class 'selectolax.parser.HTMLParser'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: Conversation
            obj: <class 'app.models.conversation.Conversation'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: Message
            obj: <class 'app.models.message.Message'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: Participant
            obj: <class 'app.models.participant.Participant'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: ParticipantStatus
            obj: <enum 'ParticipantStatus'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: pytestmark
            obj: MarkDecorator(mark=Mark(name='asyncio', args=(), kwargs={}))
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: test_list_my_invitations_empty
            obj: <function test_list_my_invitations_empty at 0x106d61300>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d7f350>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_my_invitations_empty>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: test_list_my_invitations_one_invitation
            obj: <function test_list_my_invitations_one_invitation at 0x106d61260>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d7f350>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_my_invitations_one_invitation>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: test_list_my_conversations_empty
            obj: <function test_list_my_conversations_empty at 0x106d60d60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d940d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_my_conversations_empty>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: test_list_my_conversations_one_joined
            obj: <function test_list_my_conversations_one_joined at 0x106d614e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d94cd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_my_conversations_one_joined>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: test_get_my_profile_unauthenticated
            obj: <function test_get_my_profile_unauthenticated at 0x106d61580>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d94cd0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_get_my_profile_unauthenticated>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: test_list_my_invitations_unauthenticated
            obj: <function test_list_my_invitations_unauthenticated at 0x106d61620>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d95a10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_my_invitations_unauthenticated>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: test_list_my_conversations_unauthenticated
            obj: <function test_list_my_conversations_unauthenticated at 0x106d616c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d7fd90>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_my_conversations_unauthenticated>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_me.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106d60900>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_me.py' lenresult=7 outcome='passed'> [hook]
    genitems <Coroutine test_list_my_invitations_empty> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_my_invitations_empty>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_my_invitations_one_invitation> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_my_invitations_one_invitation>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_my_conversations_empty> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_my_conversations_empty>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_my_conversations_one_joined> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_my_conversations_one_joined>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_get_my_profile_unauthenticated> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_get_my_profile_unauthenticated>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_my_invitations_unauthenticated> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_my_invitations_unauthenticated>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_my_conversations_unauthenticated> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_my_conversations_unauthenticated>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_me.py' lenresult=7 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_participants.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_participants.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_participants.py>
      find_module called for: test_participants [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_participants.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_participants.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: uuid
            obj: <module 'uuid' from '/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: Optional
            obj: typing.Optional
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: UUID
            obj: <class 'uuid.UUID'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: select
            obj: <function select at 0x1050872e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: Conversation
            obj: <class 'app.models.conversation.Conversation'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: Message
            obj: <class 'app.models.message.Message'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: Participant
            obj: <class 'app.models.participant.Participant'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: ParticipantResponse
            obj: <class 'app.schemas.participant.ParticipantResponse'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: ParticipantStatus
            obj: <enum 'ParticipantStatus'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: ParticipantUpdateRequest
            obj: <class 'app.schemas.participant.ParticipantUpdateRequest'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: pytestmark
            obj: MarkDecorator(mark=Mark(name='asyncio', args=(), kwargs={}))
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: test_accept_invitation_success
            obj: <function test_accept_invitation_success at 0x106d622a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d95050>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_accept_invitation_success>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: test_reject_invitation_success
            obj: <function test_reject_invitation_success at 0x106d62340>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d947d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_reject_invitation_success>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: test_update_participant_not_owned
            obj: <function test_update_participant_not_owned at 0x106d623e0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d947d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_update_participant_not_owned>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: test_update_participant_invalid_current_status
            obj: <function test_update_participant_invalid_current_status at 0x106d62480>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d967d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_update_participant_invalid_current_status>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: test_update_participant_invalid_target_status
            obj: <function test_update_participant_invalid_target_status at 0x106d62520>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d967d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_update_participant_invalid_target_status>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106d61d00>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_participants.py' lenresult=5 outcome='passed'> [hook]
    genitems <Coroutine test_accept_invitation_success> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_accept_invitation_success>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_reject_invitation_success> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_reject_invitation_success>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_update_participant_not_owned> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_update_participant_not_owned>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_update_participant_invalid_current_status> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_update_participant_invalid_current_status>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_update_participant_invalid_target_status> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_update_participant_invalid_target_status>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_participants.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_presence_middleware.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_presence_middleware.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_presence_middleware.py>
      find_module called for: test_presence_middleware [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_presence_middleware.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_presence_middleware.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: datetime
            obj: <class 'datetime.datetime'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: timedelta
            obj: <class 'datetime.timedelta'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: timezone
            obj: <class 'datetime.timezone'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: AsyncMock
            obj: <class 'unittest.mock.AsyncMock'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: patch
            obj: <function patch at 0x10657c400>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: update_all_users_online_status
            obj: <function update_all_users_online_status at 0x10658d260>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: test_middleware_updates_presence_for_authenticated_user
            obj: <function test_middleware_updates_presence_for_authenticated_user at 0x106d62a20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d9c250>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_middleware_updates_presence_for_authenticated_user>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: test_middleware_updates_is_online_status
            obj: <function test_middleware_updates_is_online_status at 0x106d62ac0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d9c910>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_middleware_updates_is_online_status>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: test_middleware_ignores_unauthenticated_requests
            obj: <function test_middleware_ignores_unauthenticated_requests at 0x106d62b60>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d9c910>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_middleware_ignores_unauthenticated_requests>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: test_middleware_handles_database_errors_gracefully
            obj: <function test_middleware_handles_database_errors_gracefully at 0x106d62c00>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d9dc50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_middleware_handles_database_errors_gracefully>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: test_middleware_updates_on_multiple_requests
            obj: <function test_middleware_updates_on_multiple_requests at 0x106d62ca0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d9e310>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_middleware_updates_on_multiple_requests>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: test_middleware_only_updates_on_successful_requests
            obj: <function test_middleware_only_updates_on_successful_requests at 0x106d62d40>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d97310>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_middleware_only_updates_on_successful_requests>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: test_update_all_users_online_status_with_recent_activity
            obj: <function test_update_all_users_online_status_with_recent_activity at 0x106d62de0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d973d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_update_all_users_online_status_with_recent_activity>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: test_update_all_users_online_status_respects_timeout_config
            obj: <function test_update_all_users_online_status_respects_timeout_config at 0x106d62e80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d9e310>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_update_all_users_online_status_respects_timeout_config>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: test_update_all_users_online_status_handles_errors_gracefully
            obj: <function test_update_all_users_online_status_handles_errors_gracefully at 0x106d62f20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d9e0d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_update_all_users_online_status_handles_errors_gracefully>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_presence_middleware.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106d619e0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_presence_middleware.py' lenresult=9 outcome='passed'> [hook]
    genitems <Coroutine test_middleware_updates_presence_for_authenticated_user> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_middleware_updates_presence_for_authenticated_user>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_middleware_updates_is_online_status> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_middleware_updates_is_online_status>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_middleware_ignores_unauthenticated_requests> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_middleware_ignores_unauthenticated_requests>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_middleware_handles_database_errors_gracefully> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_middleware_handles_database_errors_gracefully>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_middleware_updates_on_multiple_requests> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_middleware_updates_on_multiple_requests>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_middleware_only_updates_on_successful_requests> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_middleware_only_updates_on_successful_requests>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_update_all_users_online_status_with_recent_activity> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_update_all_users_online_status_with_recent_activity>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_update_all_users_online_status_respects_timeout_config> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_update_all_users_online_status_respects_timeout_config>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_update_all_users_online_status_handles_errors_gracefully> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_update_all_users_online_status_handles_errors_gracefully>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_presence_middleware.py' lenresult=9 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_user_presence.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_user_presence.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_user_presence.py>
      find_module called for: test_user_presence [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_user_presence.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_user_presence.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: datetime
            obj: <class 'datetime.datetime'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: timezone
            obj: <class 'datetime.timezone'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: test_user_has_last_active_at_field
            obj: <function test_user_has_last_active_at_field at 0x106d62200>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d9c890>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_user_has_last_active_at_field>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: test_user_has_is_online_field
            obj: <function test_user_has_is_online_field at 0x106d62980>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d9f690>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_user_has_is_online_field>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: test_is_online_defaults_to_false
            obj: <function test_is_online_defaults_to_false at 0x106d63420>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106d9fe50>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_is_online_defaults_to_false>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: test_last_active_at_defaults_to_null
            obj: <function test_last_active_at_defaults_to_null at 0x106d63380>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106da8990>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_last_active_at_defaults_to_null>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: test_can_update_last_active_at
            obj: <function test_can_update_last_active_at at 0x106d634c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106da9050>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_can_update_last_active_at>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: test_can_update_is_online_status
            obj: <function test_can_update_is_online_status at 0x106d63560>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106da9910>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_can_update_is_online_status>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: test_can_update_both_presence_fields_together
            obj: <function test_can_update_both_presence_fields_together at 0x106d63600>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106daa1d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_can_update_both_presence_fields_together>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_user_presence.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106ce3b00>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_user_presence.py' lenresult=7 outcome='passed'> [hook]
    genitems <Coroutine test_user_has_last_active_at_field> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_user_has_last_active_at_field>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_user_has_is_online_field> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_user_has_is_online_field>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_is_online_defaults_to_false> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_is_online_defaults_to_false>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_last_active_at_defaults_to_null> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_last_active_at_defaults_to_null>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_can_update_last_active_at> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_can_update_last_active_at>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_can_update_is_online_status> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_can_update_is_online_status>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_can_update_both_presence_fields_together> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_can_update_both_presence_fields_together>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_user_presence.py' lenresult=7 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_users.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_users.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_users.py>
      find_module called for: test_users [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_api/test_users.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_api/test_users.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: uuid
            obj: <module 'uuid' from '/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/uuid.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: UUID
            obj: <class 'uuid.UUID'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: AsyncClient
            obj: <class 'httpx.AsyncClient'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: HTMLParser
            obj: <class 'selectolax.parser.HTMLParser'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: AsyncSession
            obj: <class 'sqlalchemy.ext.asyncio.session.AsyncSession'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: async_sessionmaker
            obj: <class 'sqlalchemy.ext.asyncio.session.async_sessionmaker'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: create_test_user
            obj: <function create_test_user at 0x106cfa3e0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: Conversation
            obj: <class 'app.models.conversation.Conversation'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: Participant
            obj: <class 'app.models.participant.Participant'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: User
            obj: <class 'app.models.user.User'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: ParticipantStatus
            obj: <enum 'ParticipantStatus'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: pytestmark
            obj: MarkDecorator(mark=Mark(name='asyncio', args=(), kwargs={}))
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: test_list_users_empty
            obj: <function test_list_users_empty at 0x106d611c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106dabd10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_users_empty>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: test_list_users_one_user
            obj: <function test_list_users_one_user at 0x106d62fc0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106db04d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_users_one_user>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: test_list_users_multiple_users
            obj: <function test_list_users_multiple_users at 0x106d63d80>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106da99d0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_users_multiple_users>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: test_list_users_participated_empty
            obj: <function test_list_users_participated_empty at 0x106d63ec0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106daa210>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_users_participated_empty>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: test_list_users_participated_success
            obj: <function test_list_users_participated_success at 0x106d61ee0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106daa210>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_list_users_participated_success>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_users.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106d63740>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_api/test_users.py' lenresult=5 outcome='passed'> [hook]
    genitems <Coroutine test_list_users_empty> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_users_empty>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_users_one_user> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_users_one_user>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_users_multiple_users> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_users_multiple_users>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_users_participated_empty> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_users_participated_empty>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_list_users_participated_success> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_list_users_participated_success>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api/test_users.py' lenresult=5 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_api' lenresult=13 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package test_contract> [collection]
      pytest_collectstart [hook]
          collector: <Package test_contract>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package test_contract>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test_contract>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/.pytest_cache
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/.pytest_cache
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/README.md
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/README.md
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test_contract>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/README.md
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/README.md
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/__pycache__
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts
            parent: <Package test_contract>
        finish pytest_collect_directory --> <Dir artifacts> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/conftest.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/conftest.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test_contract>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/conftest.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/conftest.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/constants.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/constants.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test_contract>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/constants.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/constants.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure
            parent: <Package test_contract>
        finish pytest_collect_directory --> <Dir infrastructure> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes
            parent: <Package test_contract>
        finish pytest_collect_directory --> <Dir notes> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/pytest.ini
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/pytest.ini
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package test_contract>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/pytest.ini
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/pytest.ini
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests
            parent: <Package test_contract>
        finish pytest_collect_directory --> <Dir tests> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract' lenresult=4 outcome='passed'> [hook]
    genitems <Dir artifacts> [collection]
      pytest_collectstart [hook]
          collector: <Dir artifacts>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir artifacts>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs
            parent: <Dir artifacts>
        finish pytest_collect_directory --> <Dir logs> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/pacts
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/pacts
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/pacts
            parent: <Dir artifacts>
        finish pytest_collect_directory --> <Dir pacts> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/reports
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/reports
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/reports
            parent: <Dir artifacts>
        finish pytest_collect_directory --> <Dir reports> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/artifacts' lenresult=3 outcome='passed'> [hook]
    genitems <Dir logs> [collection]
      pytest_collectstart [hook]
          collector: <Dir logs>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir logs>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/.gitkeep
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/.gitkeep
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir logs>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/.gitkeep
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/.gitkeep
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/pact-mock-service.log
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/pact-mock-service.log
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir logs>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/pact-mock-service.log
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/pact-mock-service.log
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/pact.log
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/pact.log
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir logs>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/pact.log
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/logs/pact.log
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/artifacts/logs' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/artifacts/logs' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir pacts> [collection]
      pytest_collectstart [hook]
          collector: <Dir pacts>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir pacts>
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/artifacts/pacts' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/artifacts/pacts' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir reports> [collection]
      pytest_collectstart [hook]
          collector: <Dir reports>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir reports>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/reports/.gitkeep
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/reports/.gitkeep
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir reports>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/reports/.gitkeep
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/artifacts/reports/.gitkeep
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/artifacts/reports' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/artifacts/reports' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/artifacts' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir infrastructure> [collection]
      pytest_collectstart [hook]
          collector: <Dir infrastructure>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir infrastructure>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/__pycache__
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/config.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/config.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir infrastructure>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/config.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/config.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers
            parent: <Dir infrastructure>
        finish pytest_collect_directory --> <Package servers> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities
            parent: <Dir infrastructure>
        finish pytest_collect_directory --> <Package utilities> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/infrastructure' lenresult=2 outcome='passed'> [hook]
    genitems <Package servers> [collection]
      pytest_collectstart [hook]
          collector: <Package servers>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package servers>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package servers>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/__pycache__
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/base.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/base.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package servers>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/base.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/base.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/consumer.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/consumer.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package servers>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/consumer.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/consumer.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/provider.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/provider.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package servers>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/provider.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/servers/provider.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/infrastructure/servers' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/infrastructure/servers' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package utilities> [collection]
      pytest_collectstart [hook]
          collector: <Package utilities>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package utilities>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package utilities>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/__pycache__
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/mocks.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/mocks.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package utilities>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/mocks.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/mocks.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/pact_helpers.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/pact_helpers.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package utilities>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/pact_helpers.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/pact_helpers.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/playwright_helpers.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/playwright_helpers.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package utilities>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/playwright_helpers.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/infrastructure/utilities/playwright_helpers.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/infrastructure/utilities' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/infrastructure/utilities' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/infrastructure' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir notes> [collection]
      pytest_collectstart [hook]
          collector: <Dir notes>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir notes>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes/contract-tests-verify-waiter-not-chef.md.md
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes/contract-tests-verify-waiter-not-chef.md.md
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir notes>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes/contract-tests-verify-waiter-not-chef.md.md
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes/contract-tests-verify-waiter-not-chef.md.md
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes/contract_test_example_create_conversation.md
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes/contract_test_example_create_conversation.md
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Dir notes>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes/contract_test_example_create_conversation.md
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/notes/contract_test_example_create_conversation.md
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/notes' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/notes' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Dir tests> [collection]
      pytest_collectstart [hook]
          collector: <Dir tests>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Dir tests>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer
            parent: <Dir tests>
        finish pytest_collect_directory --> <Package consumer> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider
            parent: <Dir tests>
        finish pytest_collect_directory --> <Package provider> [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_directory [hook]
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared
            parent: <Dir tests>
        finish pytest_collect_directory --> <Package shared> [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests' lenresult=3 outcome='passed'> [hook]
    genitems <Package consumer> [collection]
      pytest_collectstart [hook]
          collector: <Package consumer>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package consumer>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package consumer>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/.pytest_cache
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/.pytest_cache
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/__pycache__
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/pytest.ini
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/pytest.ini
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package consumer>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/pytest.ini
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/pytest.ini
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_auth_form.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_auth_form.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package consumer>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_auth_form.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_auth_form.py
          pytest_pycollect_makemodule [hook]
              parent: <Package consumer>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_auth_form.py
              path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_auth_form.py
          finish pytest_pycollect_makemodule --> <Module test_auth_form.py> [hook]
        finish pytest_collect_file --> [<Module test_auth_form.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_conversation_form.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_conversation_form.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package consumer>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_conversation_form.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_conversation_form.py
          pytest_pycollect_makemodule [hook]
              parent: <Package consumer>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_conversation_form.py
              path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_conversation_form.py
          finish pytest_pycollect_makemodule --> <Module test_conversation_form.py> [hook]
        finish pytest_collect_file --> [<Module test_conversation_form.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_invitation_form.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_invitation_form.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package consumer>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_invitation_form.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_invitation_form.py
          pytest_pycollect_makemodule [hook]
              parent: <Package consumer>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_invitation_form.py
              path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_invitation_form.py
          finish pytest_pycollect_makemodule --> <Module test_invitation_form.py> [hook]
        finish pytest_collect_file --> [<Module test_invitation_form.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_message_form.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_message_form.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package consumer>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_message_form.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_message_form.py
          pytest_pycollect_makemodule [hook]
              parent: <Package consumer>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_message_form.py
              path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_message_form.py
          finish pytest_pycollect_makemodule --> <Module test_message_form.py> [hook]
        finish pytest_collect_file --> [<Module test_message_form.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests/consumer' lenresult=4 outcome='passed'> [hook]
    genitems <Module test_auth_form.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_auth_form.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_auth_form.py>
      early skip of rewriting module: consumer [assertion]
      find_module called for: consumer.test_auth_form [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_auth_form.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_auth_form.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: Like
            obj: <class 'pact.matchers.Like'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: Page
            obj: <class 'playwright.async_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: CONSUMER_NAME_REGISTRATION
            obj: registration-form
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: NETWORK_TIMEOUT_MS
            obj: 500
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: PACT_PORT_AUTH
            obj: 1234
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: PROVIDER_NAME_AUTH
            obj: auth-api
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: PROVIDER_STATE_USER_DOES_NOT_EXIST
            obj: User test.user@example.com does not exist
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: REGISTER_API_PATH
            obj: /auth/register
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: TEST_EMAIL
            obj: test.user@example.com
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: TEST_PASSWORD
            obj: securepassword123
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: TEST_USERNAME
            obj: testuser
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: setup_pact
            obj: <function setup_pact at 0x103341800>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: setup_playwright_pact_interception
            obj: <function setup_playwright_pact_interception at 0x1033418a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: test_consumer_registration_form_interaction
            obj: <function test_consumer_registration_form_interaction at 0x106dc0860>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106db2850>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x101e71e50>
                val: {'auth_pages': True}
                argname: origin_with_routes
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_consumer_registration_form_interaction[origin_with_routes0]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106dc0040>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_form.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106d63b00>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests/consumer/test_auth_form.py' lenresult=1 outcome='passed'> [hook]
    genitems <Coroutine test_consumer_registration_form_interaction[origin_with_routes0]> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_consumer_registration_form_interaction[origin_with_routes0]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests/consumer/test_auth_form.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_conversation_form.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_conversation_form.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_conversation_form.py>
      find_module called for: consumer.test_conversation_form [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_conversation_form.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_conversation_form.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: Page
            obj: <class 'playwright.async_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: Route
            obj: <class 'playwright.async_api._generated.Route'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: TEST_INITIAL_MESSAGE
            obj: Hello from shared data!
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: TEST_INVITEE_USERNAME
            obj: shared_testuser
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: get_form_encoded_creation_data
            obj: <function get_form_encoded_creation_data at 0x103048f40>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: CONSUMER_NAME_CONVERSATION
            obj: create-conversation-form
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: NETWORK_TIMEOUT_MS
            obj: 500
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: PACT_PORT_CONVERSATION
            obj: 1235
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: PROVIDER_NAME_CONVERSATIONS
            obj: conversations-api
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: setup_pact
            obj: <function setup_pact at 0x103341800>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: setup_playwright_pact_interception
            obj: <function setup_playwright_pact_interception at 0x1033418a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: CONVERSATIONS_NEW_PATH
            obj: /conversations/new
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: CONVERSATIONS_CREATE_PATH
            obj: /conversations
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: MOCK_CONVERSATION_SLUG
            obj: mock-slug
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: MOCK_CONVERSATION_GET_PATH
            obj: /conversations/mock-slug
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: PROVIDER_STATE_USER_ONLINE
            obj: user is authenticated and target user exists and is online
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: test_consumer_conversation_create_success
            obj: <function test_consumer_conversation_create_success at 0x106dc07c0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106db3c10>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x101e71e50>
                val: {'conversations': True, 'auth_pages': True}
                argname: origin_with_routes
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_consumer_conversation_create_success[origin_with_routes0]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106dc0540>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversation_form.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106d61bc0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests/consumer/test_conversation_form.py' lenresult=1 outcome='passed'> [hook]
    genitems <Coroutine test_consumer_conversation_create_success[origin_with_routes0]> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_consumer_conversation_create_success[origin_with_routes0]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests/consumer/test_conversation_form.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_invitation_form.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_invitation_form.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_invitation_form.py>
      find_module called for: consumer.test_invitation_form [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_invitation_form.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_invitation_form.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: Page
            obj: <class 'playwright.async_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: CONSUMER_NAME_INVITATION
            obj: invitation-form
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: INVITATIONS_PATH
            obj: /users/me/invitations
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: MOCK_PARTICIPANT_ID
            obj: 550e8400-e29b-41d4-a716-446655440000
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: NETWORK_TIMEOUT_MS
            obj: 500
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: PACT_PORT_INVITATION_ACCEPT
            obj: 1236
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: PACT_PORT_INVITATION_REJECT
            obj: 1237
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: PARTICIPANTS_API_PATH
            obj: /participants
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: PROVIDER_NAME_PARTICIPANTS
            obj: participants-api
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: PROVIDER_STATE_USER_HAS_INVITATIONS
            obj: user has pending invitations
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: setup_pact
            obj: <function setup_pact at 0x103341800>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: setup_playwright_pact_interception
            obj: <function setup_playwright_pact_interception at 0x1033418a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: test_consumer_invitation_accept_method_mismatch
            obj: <function test_consumer_invitation_accept_method_mismatch at 0x106dc1080>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106dc9650>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x101e71e50>
                val: {'me_pages': True, 'auth_pages': True, 'mock_invitations': True}
                argname: origin_with_routes
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_consumer_invitation_accept_method_mismatch[origin_with_routes0]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: test_consumer_invitation_reject_method_mismatch
            obj: <function test_consumer_invitation_reject_method_mismatch at 0x106dc1120>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106dc9e50>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x101e71e50>
                val: {'me_pages': True, 'auth_pages': True, 'mock_invitations': True}
                argname: origin_with_routes
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_consumer_invitation_reject_method_mismatch[origin_with_routes0]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106dc0d60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_invitation_form.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106d61080>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests/consumer/test_invitation_form.py' lenresult=2 outcome='passed'> [hook]
    genitems <Coroutine test_consumer_invitation_accept_method_mismatch[origin_with_routes0]> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_consumer_invitation_accept_method_mismatch[origin_with_routes0]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_consumer_invitation_reject_method_mismatch[origin_with_routes0]> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_consumer_invitation_reject_method_mismatch[origin_with_routes0]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests/consumer/test_invitation_form.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_message_form.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_message_form.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_message_form.py>
      find_module called for: consumer.test_message_form [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_message_form.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_contract/tests/consumer/test_message_form.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: Page
            obj: <class 'playwright.async_api._generated.Page'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: Route
            obj: <class 'playwright.async_api._generated.Route'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: TEST_MESSAGE_CONTENT
            obj: This is a test message for contract testing!
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: get_form_encoded_message_data
            obj: <function get_form_encoded_message_data at 0x103341080>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: CONSUMER_NAME_MESSAGE
            obj: send-message-form
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: NETWORK_TIMEOUT_MS
            obj: 500
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: PACT_PORT_MESSAGE
            obj: 1238
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: PROVIDER_NAME_MESSAGES
            obj: messages-api
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: setup_pact
            obj: <function setup_pact at 0x103341800>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: setup_playwright_pact_interception
            obj: <function setup_playwright_pact_interception at 0x1033418a0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: MOCK_CONVERSATION_SLUG
            obj: test-conversation-slug
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: CONVERSATION_DETAIL_PATH
            obj: /conversations/test-conversation-slug
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: MESSAGE_CREATE_PATH
            obj: /conversations/test-conversation-slug/messages
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: PROVIDER_STATE_USER_AUTHENTICATED
            obj: user is authenticated and has access to conversation
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: test_consumer_message_page_loads
            obj: <function test_consumer_message_page_loads at 0x106dc1300>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106dcb550>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x101e71e50>
                val: {'conversations': True, 'auth_pages': True, 'mock_conversation_details': True}
                argname: origin_with_routes
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_consumer_message_page_loads[origin_with_routes0]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: test_consumer_message_create_success
            obj: <function test_consumer_message_create_success at 0x106dc13a0>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106dcba10>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x101e71e50>
                val: {'conversations': True, 'auth_pages': True, 'mock_conversation_details': True}
                argname: origin_with_routes
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_consumer_message_create_success[origin_with_routes0]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: test_consumer_message_form_contract_validation
            obj: <function test_consumer_message_form_contract_validation at 0x106dc1440>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x106dcba10>
            pytest_make_parametrize_id [hook]
                config: <_pytest.config.Config object at 0x101e71e50>
                val: {'conversations': True, 'auth_pages': True, 'mock_conversation_details': True}
                argname: origin_with_routes
            finish pytest_make_parametrize_id --> None [hook]
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Coroutine test_consumer_message_form_contract_validation[origin_with_routes0]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106dc11c0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_message_form.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106d63e20>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests/consumer/test_message_form.py' lenresult=3 outcome='passed'> [hook]
    genitems <Coroutine test_consumer_message_page_loads[origin_with_routes0]> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_consumer_message_page_loads[origin_with_routes0]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_consumer_message_create_success[origin_with_routes0]> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_consumer_message_create_success[origin_with_routes0]>
      finish pytest_itemcollected --> [] [hook]
    genitems <Coroutine test_consumer_message_form_contract_validation[origin_with_routes0]> [collection]
      pytest_itemcollected [hook]
          item: <Coroutine test_consumer_message_form_contract_validation[origin_with_routes0]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests/consumer/test_message_form.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests/consumer' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package provider> [collection]
      pytest_collectstart [hook]
          collector: <Package provider>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package provider>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package provider>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/__pycache__
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_auth_verification.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_auth_verification.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package provider>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_auth_verification.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_auth_verification.py
          pytest_pycollect_makemodule [hook]
              parent: <Package provider>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_auth_verification.py
              path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_auth_verification.py
          finish pytest_pycollect_makemodule --> <Module test_auth_verification.py> [hook]
        finish pytest_collect_file --> [<Module test_auth_verification.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_conversations_verification.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_conversations_verification.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package provider>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_conversations_verification.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_conversations_verification.py
          pytest_pycollect_makemodule [hook]
              parent: <Package provider>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_conversations_verification.py
              path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_conversations_verification.py
          finish pytest_pycollect_makemodule --> <Module test_conversations_verification.py> [hook]
        finish pytest_collect_file --> [<Module test_conversations_verification.py>] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_participants_verification.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_participants_verification.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package provider>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_participants_verification.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_participants_verification.py
          pytest_pycollect_makemodule [hook]
              parent: <Package provider>
              module_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_participants_verification.py
              path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_participants_verification.py
          finish pytest_pycollect_makemodule --> <Module test_participants_verification.py> [hook]
        finish pytest_collect_file --> [<Module test_participants_verification.py>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests/provider' lenresult=3 outcome='passed'> [hook]
    genitems <Module test_auth_verification.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_auth_verification.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_auth_verification.py>
      early skip of rewriting module: provider [assertion]
      find_module called for: provider.test_auth_verification [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_auth_verification.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_auth_verification.py [assertion]
      early skip of rewriting module: tests.test_contract.tests.shared.mock_data_factory [assertion]
      early skip of rewriting module: tests.test_contract.tests.shared.provider_verification_base [assertion]
      early skip of rewriting module: idna.uts46data [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: URL
            obj: <class 'yarl.URL'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: MockDataFactory
            obj: <class 'tests.test_contract.tests.shared.mock_data_factory.MockDataFactory'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: BaseProviderVerification
            obj: <class 'tests.test_contract.tests.shared.provider_verification_base.BaseProviderVerification'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: create_provider_test_decorator
            obj: <function create_provider_test_decorator at 0x106dc2b60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: AuthVerification
            obj: <class 'provider.test_auth_verification.AuthVerification'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: auth_verification
            obj: <provider.test_auth_verification.AuthVerification object at 0x106dd5790>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: test_provider_auth_pact_verification
            obj: <function test_provider_auth_pact_verification at 0x106dc3240>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x107285a10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_provider_auth_pact_verification[with_auth_api_mocks]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106dc1b20>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_auth_verification.py>
            name: __pytest_asyncio_package_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106dc18a0>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests/provider/test_auth_verification.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_provider_auth_pact_verification[with_auth_api_mocks]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_provider_auth_pact_verification[with_auth_api_mocks]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests/provider/test_auth_verification.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_conversations_verification.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_conversations_verification.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_conversations_verification.py>
      find_module called for: provider.test_conversations_verification [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_conversations_verification.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_conversations_verification.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: URL
            obj: <class 'yarl.URL'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: MockDataFactory
            obj: <class 'tests.test_contract.tests.shared.mock_data_factory.MockDataFactory'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: BaseProviderVerification
            obj: <class 'tests.test_contract.tests.shared.provider_verification_base.BaseProviderVerification'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: create_provider_test_decorator
            obj: <function create_provider_test_decorator at 0x106dc2b60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: ConversationsVerification
            obj: <class 'provider.test_conversations_verification.ConversationsVerification'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: conversations_verification
            obj: <provider.test_conversations_verification.ConversationsVerification object at 0x107286310>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: test_provider_conversations_pact_verification
            obj: <function test_provider_conversations_pact_verification at 0x10728aa20>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x1072e1b10>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_provider_conversations_pact_verification[with_conversations_api_mocks]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_conversations_verification.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x106dc1e40>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests/provider/test_conversations_verification.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_provider_conversations_pact_verification[with_conversations_api_mocks]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_provider_conversations_pact_verification[with_conversations_api_mocks]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests/provider/test_conversations_verification.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Module test_participants_verification.py> [collection]
      pytest_collectstart [hook]
          collector: <Module test_participants_verification.py>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module test_participants_verification.py>
      find_module called for: provider.test_participants_verification [assertion]
      matched test file '/Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_participants_verification.py' [assertion]
      found cached rewritten pyc for /Users/willmoritz/Code/aimagain/tests/test_contract/tests/provider/test_participants_verification.py [assertion]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: @py_builtins
            obj: <module 'builtins' (built-in)>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: @pytest_ar
            obj: <module '_pytest.assertion.rewrite' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/_pytest/assertion/rewrite.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: pytest
            obj: <module 'pytest' from '/Users/willmoritz/Code/aimagain/venv/lib/python3.11/site-packages/pytest/__init__.py'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: URL
            obj: <class 'yarl.URL'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: MockDataFactory
            obj: <class 'tests.test_contract.tests.shared.mock_data_factory.MockDataFactory'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: BaseProviderVerification
            obj: <class 'tests.test_contract.tests.shared.provider_verification_base.BaseProviderVerification'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: create_provider_test_decorator
            obj: <function create_provider_test_decorator at 0x106dc2b60>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: ParticipantsVerification
            obj: <class 'provider.test_participants_verification.ParticipantsVerification'>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: participants_verification
            obj: <provider.test_participants_verification.ParticipantsVerification object at 0x106d32ed0>
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: test_provider_participants_pact_verification
            obj: <function test_provider_participants_pact_verification at 0x1072de480>
          pytest_generate_tests [hook]
              metafunc: <_pytest.python.Metafunc object at 0x1072e2ed0>
          finish pytest_generate_tests --> [] [hook]
        finish pytest_pycollect_makeitem --> [<Function test_provider_participants_pact_verification[with_participants_api_mocks]>] [hook]
        pytest_pycollect_makeitem [hook]
            collector: <Module test_participants_verification.py>
            name: __pytest_asyncio_scoped_event_loop
            obj: <function pytest_collectstart.<locals>.scoped_event_loop at 0x10728a700>
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests/provider/test_participants_verification.py' lenresult=1 outcome='passed'> [hook]
    genitems <Function test_provider_participants_pact_verification[with_participants_api_mocks]> [collection]
      pytest_itemcollected [hook]
          item: <Function test_provider_participants_pact_verification[with_participants_api_mocks]>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests/provider/test_participants_verification.py' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests/provider' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <Package shared> [collection]
      pytest_collectstart [hook]
          collector: <Package shared>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Package shared>
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/__init__.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package shared>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/__init__.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/__init__.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/__pycache__
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/__pycache__
        finish pytest_ignore_collect --> True [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/consumer_test_base.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/consumer_test_base.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package shared>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/consumer_test_base.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/consumer_test_base.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/helpers.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/helpers.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package shared>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/helpers.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/helpers.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/mock_data_factory.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/mock_data_factory.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package shared>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/mock_data_factory.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/mock_data_factory.py
        finish pytest_collect_file --> [] [hook]
        pytest_ignore_collect [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            collection_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/provider_verification_base.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/provider_verification_base.py
        finish pytest_ignore_collect --> None [hook]
        pytest_collect_file [hook]
            parent: <Package shared>
            file_path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/provider_verification_base.py
            path: /Users/willmoritz/Code/aimagain/tests/test_contract/tests/shared/provider_verification_base.py
        finish pytest_collect_file --> [] [hook]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_contract/tests/shared' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests/shared' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract/tests' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_contract' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
          config: <_pytest.config.Config object at 0x101e71e50>
          items: [<Coroutine test_register>, <Coroutine test_register_duplicate_email>, <Coroutine test_login_success>, <Coroutine test_login_failure_wrong_password>, <Coroutine test_login_failure_nonexistent_user>, <Coroutine test_logout_success>, <Coroutine test_forgot_password_request>, <Coroutine test_forgot_password_request_nonexistent_user>, <Coroutine test_reset_password>, <Coroutine test_reset_password_invalid_token>, <Coroutine test_get_register_page>, <Coroutine test_get_login_page>, <Coroutine test_get_forgot_password_page>, <Coroutine test_get_reset_password_page>, <Coroutine test_get_new_conversation_form_success>, <Coroutine test_get_new_conversation_form_unauthenticated>, <Coroutine test_create_conversation_invitee_not_found>, <Coroutine test_create_conversation_invitee_offline>, <Coroutine test_create_conversation_success_with_username>, <Coroutine test_create_conversation_form_invalid_username>, <Coroutine test_create_conversation_form_missing_data[invitee_username]>, <Coroutine test_create_conversation_form_missing_data[initial_message]>, <Coroutine test_create_conversation_form_unauthenticated>, <Coroutine test_create_message_success>, <Coroutine test_create_message_conversation_not_found>, <Coroutine test_create_message_user_not_participant>, <Coroutine test_create_message_user_invited_not_joined>, <Coroutine test_create_message_empty_content>, <Coroutine test_message_sending_integration>, <Coroutine test_get_conversation_not_found>, <Coroutine test_get_conversation_forbidden_not_participant>, <Coroutine test_get_conversation_forbidden_invited>, <Coroutine test_get_conversation_success_joined>, <Coroutine test_get_conversation_has_message_form>, <Coroutine test_invite_participant_success>, <Coroutine test_invite_participant_forbidden_not_joined>, <Coroutine test_invite_participant_conflict_already_participant>, <Coroutine test_invite_participant_bad_request_offline>, <Coroutine test_list_conversations_empty>, <Coroutine test_list_conversations_one_convo>, <Coroutine test_list_conversations_sorted>, <Coroutine test_create_conversation_link_present>, <Coroutine test_list_my_invitations_empty>, <Coroutine test_list_my_invitations_one_invitation>, <Coroutine test_list_my_conversations_empty>, <Coroutine test_list_my_conversations_one_joined>, <Coroutine test_get_my_profile_unauthenticated>, <Coroutine test_list_my_invitations_unauthenticated>, <Coroutine test_list_my_conversations_unauthenticated>, <Coroutine test_accept_invitation_success>, <Coroutine test_reject_invitation_success>, <Coroutine test_update_participant_not_owned>, <Coroutine test_update_participant_invalid_current_status>, <Coroutine test_update_participant_invalid_target_status>, <Coroutine test_middleware_updates_presence_for_authenticated_user>, <Coroutine test_middleware_updates_is_online_status>, <Coroutine test_middleware_ignores_unauthenticated_requests>, <Coroutine test_middleware_handles_database_errors_gracefully>, <Coroutine test_middleware_updates_on_multiple_requests>, <Coroutine test_middleware_only_updates_on_successful_requests>, <Coroutine test_update_all_users_online_status_with_recent_activity>, <Coroutine test_update_all_users_online_status_respects_timeout_config>, <Coroutine test_update_all_users_online_status_handles_errors_gracefully>, <Coroutine test_user_has_last_active_at_field>, <Coroutine test_user_has_is_online_field>, <Coroutine test_is_online_defaults_to_false>, <Coroutine test_last_active_at_defaults_to_null>, <Coroutine test_can_update_last_active_at>, <Coroutine test_can_update_is_online_status>, <Coroutine test_can_update_both_presence_fields_together>, <Coroutine test_list_users_empty>, <Coroutine test_list_users_one_user>, <Coroutine test_list_users_multiple_users>, <Coroutine test_list_users_participated_empty>, <Coroutine test_list_users_participated_success>, <Coroutine test_consumer_registration_form_interaction[origin_with_routes0]>, <Coroutine test_consumer_conversation_create_success[origin_with_routes0]>, <Coroutine test_consumer_invitation_accept_method_mismatch[origin_with_routes0]>, <Coroutine test_consumer_invitation_reject_method_mismatch[origin_with_routes0]>, <Coroutine test_consumer_message_page_loads[origin_with_routes0]>, <Coroutine test_consumer_message_create_success[origin_with_routes0]>, <Coroutine test_consumer_message_form_contract_validation[origin_with_routes0]>, <Function test_provider_auth_pact_verification[with_auth_api_mocks]>, <Function test_provider_conversations_pact_verification[with_conversations_api_mocks]>, <Function test_provider_participants_pact_verification[with_participants_api_mocks]>]
        pytest_deselected [hook]
            items: [<Coroutine test_register>, <Coroutine test_register_duplicate_email>, <Coroutine test_login_success>, <Coroutine test_login_failure_wrong_password>, <Coroutine test_login_failure_nonexistent_user>, <Coroutine test_logout_success>, <Coroutine test_forgot_password_request>, <Coroutine test_forgot_password_request_nonexistent_user>, <Coroutine test_reset_password>, <Coroutine test_reset_password_invalid_token>, <Coroutine test_get_register_page>, <Coroutine test_get_login_page>, <Coroutine test_get_forgot_password_page>, <Coroutine test_get_reset_password_page>, <Coroutine test_get_new_conversation_form_success>, <Coroutine test_get_new_conversation_form_unauthenticated>, <Coroutine test_create_conversation_invitee_not_found>, <Coroutine test_create_conversation_invitee_offline>, <Coroutine test_create_conversation_success_with_username>, <Coroutine test_create_conversation_form_invalid_username>, <Coroutine test_create_conversation_form_missing_data[invitee_username]>, <Coroutine test_create_conversation_form_missing_data[initial_message]>, <Coroutine test_create_conversation_form_unauthenticated>, <Coroutine test_create_message_success>, <Coroutine test_create_message_conversation_not_found>, <Coroutine test_create_message_user_not_participant>, <Coroutine test_create_message_user_invited_not_joined>, <Coroutine test_create_message_empty_content>, <Coroutine test_message_sending_integration>, <Coroutine test_get_conversation_not_found>, <Coroutine test_get_conversation_forbidden_not_participant>, <Coroutine test_get_conversation_forbidden_invited>, <Coroutine test_get_conversation_success_joined>, <Coroutine test_get_conversation_has_message_form>, <Coroutine test_invite_participant_success>, <Coroutine test_invite_participant_forbidden_not_joined>, <Coroutine test_invite_participant_conflict_already_participant>, <Coroutine test_invite_participant_bad_request_offline>, <Coroutine test_list_conversations_empty>, <Coroutine test_list_conversations_one_convo>, <Coroutine test_list_conversations_sorted>, <Coroutine test_create_conversation_link_present>, <Coroutine test_list_my_invitations_empty>, <Coroutine test_list_my_invitations_one_invitation>, <Coroutine test_list_my_conversations_empty>, <Coroutine test_list_my_conversations_one_joined>, <Coroutine test_get_my_profile_unauthenticated>, <Coroutine test_list_my_invitations_unauthenticated>, <Coroutine test_list_my_conversations_unauthenticated>, <Coroutine test_accept_invitation_success>, <Coroutine test_reject_invitation_success>, <Coroutine test_update_participant_not_owned>, <Coroutine test_update_participant_invalid_current_status>, <Coroutine test_update_participant_invalid_target_status>, <Coroutine test_middleware_updates_presence_for_authenticated_user>, <Coroutine test_middleware_updates_is_online_status>, <Coroutine test_middleware_ignores_unauthenticated_requests>, <Coroutine test_middleware_handles_database_errors_gracefully>, <Coroutine test_middleware_updates_on_multiple_requests>, <Coroutine test_middleware_only_updates_on_successful_requests>, <Coroutine test_update_all_users_online_status_with_recent_activity>, <Coroutine test_update_all_users_online_status_respects_timeout_config>, <Coroutine test_update_all_users_online_status_handles_errors_gracefully>, <Coroutine test_user_has_last_active_at_field>, <Coroutine test_user_has_is_online_field>, <Coroutine test_is_online_defaults_to_false>, <Coroutine test_last_active_at_defaults_to_null>, <Coroutine test_can_update_last_active_at>, <Coroutine test_can_update_is_online_status>, <Coroutine test_can_update_both_presence_fields_together>, <Coroutine test_list_users_empty>, <Coroutine test_list_users_one_user>, <Coroutine test_list_users_multiple_users>, <Coroutine test_list_users_participated_empty>, <Coroutine test_list_users_participated_success>, <Coroutine test_consumer_registration_form_interaction[origin_with_routes0]>, <Coroutine test_consumer_conversation_create_success[origin_with_routes0]>, <Coroutine test_consumer_invitation_accept_method_mismatch[origin_with_routes0]>, <Coroutine test_consumer_invitation_reject_method_mismatch[origin_with_routes0]>, <Coroutine test_consumer_message_create_success[origin_with_routes0]>, <Coroutine test_consumer_message_form_contract_validation[origin_with_routes0]>, <Function test_provider_auth_pact_verification[with_auth_api_mocks]>, <Function test_provider_conversations_pact_verification[with_conversations_api_mocks]>, <Function test_provider_participants_pact_verification[with_participants_api_mocks]>]
        finish pytest_deselected --> [] [hook]
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=0>
        pytest_report_collectionfinish [hook]
            config: <_pytest.config.Config object at 0x101e71e50>
            items: [<Coroutine test_consumer_message_page_loads[origin_with_routes0]>]
            start_path: /Users/willmoritz/Code/aimagain
            startdir: /Users/willmoritz/Code/aimagain
        finish pytest_report_collectionfinish --> [] [hook]
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> None [hook]
    pytest_runtestloop [hook]
        session: <Session  exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>
      pytest_runtest_protocol [hook]
          item: <Coroutine test_consumer_message_page_loads[origin_with_routes0]>
          nextitem: None
        pytest_runtest_logstart [hook]
            nodeid: tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]
            location: ('tests/test_contract/tests/consumer/test_message_form.py', 25, 'test_consumer_message_page_loads[origin_with_routes0]')
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <Coroutine test_consumer_message_page_loads[origin_with_routes0]>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_setup --> <_pytest.config.Config object at 0x101e71e50> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='delete_output_dir' scope='session' baseid=''>
              request: <SubRequest 'delete_output_dir' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_setup --> <asyncio.unix_events._UnixDefaultEventLoopPolicy object at 0x106db0d10> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='base_url' scope='session' baseid=''>
              request: <SubRequest 'base_url' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_setup -->  [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='_verify_url' scope='session' baseid=''>
              request: <SubRequest '_verify_url' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='clean_pact_dir_before_session' scope='session' baseid='tests/test_contract'>
              request: <SubRequest 'clean_pact_dir_before_session' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='origin_with_routes' scope='session' baseid='tests/test_contract'>
              request: <SubRequest 'origin_with_routes' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          early skip of rewriting module: multiprocessing.popen_spawn_posix [assertion]
          early skip of rewriting module: multiprocessing.popen_fork [assertion]
          early skip of rewriting module: multiprocessing.spawn [assertion]
          early skip of rewriting module: runpy [assertion]
          early skip of rewriting module: multiprocessing.resource_tracker [assertion]
          early skip of rewriting module: _posixshmem [assertion]
          early skip of rewriting module: netrc [assertion]
          finish pytest_fixture_setup --> http://127.0.0.1:8990 [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='browser' scope='session' baseid='tests/test_contract'>
              request: <SubRequest 'browser' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef argname='_session_event_loop' scope='session' baseid=''>
                request: <SubRequest '_session_event_loop' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
            finish pytest_fixture_setup --> <_UnixSelectorEventLoop running=False closed=False debug=False> [hook]
          finish pytest_fixture_setup --> <Browser type=<BrowserType name=chromium executable_path=/Users/willmoritz/Library/Caches/ms-playwright/chromium-1169/chrome-mac/Chromium.app/Contents/MacOS/Chromium> version=136.0.7103.25> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid='tests/test_contract'>
              request: <SubRequest 'page' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_setup --> <Page url='about:blank'> [hook]
        finish pytest_runtest_setup --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_consumer_message_page_loads[origin_with_routes0]>
            call: <CallInfo when='setup' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]' when='setup' outcome='passed'>
              config: <_pytest.config.Config object at 0x101e71e50>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <Coroutine test_consumer_message_page_loads[origin_with_routes0]>
          pytest_pyfunc_call [hook]
              pyfuncitem: <Coroutine test_consumer_message_page_loads[origin_with_routes0]>
          finish pytest_pyfunc_call --> True [hook]
        finish pytest_runtest_call --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_consumer_message_page_loads[origin_with_routes0]>
            call: <CallInfo when='call' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]' when='call' outcome='passed'>
              config: <_pytest.config.Config object at 0x101e71e50>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <Coroutine test_consumer_message_page_loads[origin_with_routes0]>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid='tests/test_contract'>
              request: <SubRequest 'page' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='page' scope='function' baseid='tests/test_contract'>
              request: <SubRequest 'page' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='browser' scope='session' baseid='tests/test_contract'>
              request: <SubRequest 'browser' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_session_event_loop' scope='session' baseid=''>
              request: <SubRequest '_session_event_loop' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='origin_with_routes' scope='session' baseid='tests/test_contract'>
              request: <SubRequest 'origin_with_routes' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='clean_pact_dir_before_session' scope='session' baseid='tests/test_contract'>
              request: <SubRequest 'clean_pact_dir_before_session' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_verify_url' scope='session' baseid=''>
              request: <SubRequest '_verify_url' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_verify_url' scope='session' baseid=''>
              request: <SubRequest '_verify_url' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='base_url' scope='session' baseid=''>
              request: <SubRequest 'base_url' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='_session_event_loop' scope='session' baseid=''>
              request: <SubRequest '_session_event_loop' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='event_loop_policy' scope='session' baseid=''>
              request: <SubRequest 'event_loop_policy' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='delete_output_dir' scope='session' baseid=''>
              request: <SubRequest 'delete_output_dir' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='delete_output_dir' scope='session' baseid=''>
              request: <SubRequest 'delete_output_dir' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef argname='pytestconfig' scope='session' baseid=''>
              request: <SubRequest 'pytestconfig' for <Coroutine test_consumer_message_page_loads[origin_with_routes0]>>
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> None [hook]
        pytest_runtest_makereport [hook]
            item: <Coroutine test_consumer_message_page_loads[origin_with_routes0]>
            call: <CallInfo when='teardown' result: None>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]' when='teardown' outcome='passed'>
              config: <_pytest.config.Config object at 0x101e71e50>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_logfinish [hook]
            nodeid: tests/test_contract/tests/consumer/test_message_form.py::test_consumer_message_page_loads[origin_with_routes0]
            location: ('tests/test_contract/tests/consumer/test_message_form.py', 25, 'test_consumer_message_page_loads[origin_with_routes0]')
        finish pytest_runtest_logfinish --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session  exitstatus=0 testsfailed=0 testscollected=1>
        exitstatus: 0
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter object at 0x106cb8390>
          exitstatus: 0
          config: <_pytest.config.Config object at 0x101e71e50>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x101e71e50>
    finish pytest_unconfigure --> [] [hook]
